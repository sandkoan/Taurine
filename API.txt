Garuda API

default : {success : true | false, data : {<errors>, <errorParams>, <messages>}}
<default> below specifies the parameter of default.data above

GET /:<anything not below>
    about: get the main app page
    in: nothing
    data: return the main app page
    
POST /api/user
    about: create new user
    in: {username, password, confirm, email, name}
    data: {success : registration}
    error:
        - missing parameters (all required) - errors : [missingParams]
        - username too long or short (3 <> 20) - errors : [parameter] + param
        - password too long or short (8 <> 40) - errors : [parameter] + param
        - password must match confirmation - errors : [passwordConfirm]
        - email too long or short (6 <> 200) - errors : [parameter] + param
        - name too long or short (1 <> 60) - errors : [parameter] + param
        - username must be alphanumeric - errors : [parameter] + param
        - invalid email format - errors : [validMail]
        - user with username already exists - errors : [duplicate]

GET /api/user/confirm/:UID/:CID
    about: confirm a user registration
    in: {}
    data: {success : confirm}
    error:
        - UID/CID does not exist - errors : [noSuchConfirm]
        - already confirmed - errors : [alreadyConfirmed]
        
POST /api/user/login
    about: login with credentials
    in: {username, password}
    data: {success : login}
    error:
        - missing parameters - errors : [missingParams]
        - improper credentials - errors : [noSuchCreds]
        - user not confirmed yet - errors : [notConfirmed]

POST /api/user/logout
    about: log out of site
    in: {}
    data: {<default>}
    error:
        - not authenticated
        
POST /api/user/forgot
    about: forgot your password or username
    in: {email, <username>}
    data: {success : forgot}
    error:
        - missing parameters - errors : [missingParams]
        - blank email - errors : [blank] + param
        - no such email on file - errors : [noSuchCreds]
        - no such username on file - errors : [noSuchCreds]

GET /api/user
    about: get your basic info
    in: {}
    data: {<default>, data : {username, email, name}}
    error:
        - not authenticated - errors : [notLoggedIn]
        
POST /api/user/edit
    about: edit your own basic info
    in: {<name>, <email>, <newPassword, confirm>}
    data: {<default>}
    error:
        - not authenticated - errors : [notLoggedIn]
        - no password confirmation - errors : [noConfirm]
        - invalid params - errors : [parameter] + param
        - malformed email - errors : [validMail]
        - password and confirmation do not match : errors : [passwordConfirm]

GET /api/sets
    about: get basic set information (ID/name/creationDate/targetDate/directorUsername/directorName/access)
    in: {}
    data: {<default>, data : [setInfo]}
    error:
        - not authenticated - errors : [notLoggedIn]

POST /api/sets
    about: create new packet set
    in: {name, password, <target (format is YYYY-MM-DD HH:mm:ss)>, <info> <markdown?>, 
        <subjects> : [[name, TU, B] <zero default>...], 
        <config> : [tossups, bonuses, packets], 
        <schema> : ACF | NSB | RCSB | RCQB, <visibility>}
    data: {<default>}
    error:
        - not authenticated - errors : [notLoggedIn]
        - missing parameters - errors : [missingParams]
        - name too long or short (2 <> 200) - errors : [parameter] + param
        - password too long or short (4 <> 40) - errors : [parameter] + param
        - info too long (< 1000) - errors : [parameter] + param
        - schema type provided is invalid - errors : [badSchema]
        - target not a valid date - errors : [badDate]
        - subject name too long or short (1 <> 50) - errors : [badSubjectName]
        - TU/B numbers in subject must be between 0 and 1000 inclusive - errors : [badSubjectNumbers]
    behaviors:
        - adds set, adds subjects, adds permission to set
        - if a subject in subjects is malformed, skip it
        - if config settings are not positive integers, default to zero
        - subject numbers are *truncated* (not rounded!) to two decimal places
        
POST /api/sets/join
    about: join a particular packet set
    in: {setID, password}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - password incorrect

PUT /api/sets/:SID
    about: edit a particular packet set
    in: {<name, password, target, info <markdown?>,
        subjects : [{subject : [TU, B] <zero default>}...], 
        config : {tossups, bonuses, packets}, 
        schema : ACF | NSB | RCSB | RCQB, visibility>}
    data: {<default>}
    error:
        - see POST /api/sets
        - no unique errors?
        
GET /api/sets/:SID
    about: get complete information for a set
    in: {}
    data: {<default>, data : {name, password, director, creation, target, info <markdown?>, subjects, config, schema, visibility}}
    error:
        - not authenticated
        - no permissions for set
        - <codes> only returns with director or administrator permissions

DELETE /api/sets/:SID
    about: completely delete a set (TBD: do I erase all pertinent data)
    in: {}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no administrator permissions for set
        
GET /api/sets/:SID/role
    about: get your role for a given set (director/administrator/editor/writer)
    in: {}
    data: {<default>, data : {role}}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        
GET /api/sets/:SID/schema
    about: get schema type for a given set (ACF/NSB/RCQB/RCSB)
    in: {}
    data: {<default>, data : {schema}}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

GET /api/sets/:SID/subjects
    about: get the subjects for a given set
    in: {}
    data: {<default>, data : {subjects : [{subject : [TU, B] <zero default>}...}}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        
GET /api/sets/:SID/members
    about: get all members belonging to a given set
    in: {}
    data: {<default>, data : [{name, username, role, [subjects]}...]}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        
PUT /api/sets/:SID/members/:MID
    about: set the role or subject foci of a given user
    in: {role || [subjects]}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - role is not admin or director
        - user is not part of set

TODO: GET /api/sets/:SID/stats
    about: get statistics for a given set
    in: {}
    data: {<default>, data : (TBD)}
    error: TBD

TODO: Import (inc. ACF)
TODO: Duplicate Search
TODO: Notifications
TODO: User Global Stats

GET /api/sets/:SID/tossups
    about: get a list of tossups (ID/<tossup>/answer/difficulty/approved/duplicate/creator/editor/flagState)
    in: {}
    data: {<default>, data: [tossupInfo]}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

GET /api/sets/:SID/tossups/:TID
    about: get a specific tossup
    in: {}
    data: {<default>, data: {tossupInfo}}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

POST /api/sets/:SID/tossups
    about: create tossups for a given set
    in: {subject, difficulty, question, answer}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

PUT /api/sets/:SID/tossups/:TID
    about: edit a given tossup
    in: {subject, difficulty, question, answer, approved, duplicate}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - not creator of question
        - not editor or administrator
        - not ed or admin and approving

DELETE /api/sets/:SID/tossups/:TID
    about: delete a given tossup
    in: {}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - not creator of question
        - not editor or administrator

POST /api/sets/:SID/tossups/:TID/message
    about: leave a message and notify users with flags
    in: {message}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        
DELETE /api/sets/:SID/tossups/:TID/message/:MID
    about: delete a message
    in: {}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - [not creator of question]?
        - not editor or administrator

GET /api/sets/:SID/bonuses
    about: get a list of bonuses (ID/lead/<questions>/answers/difficulty/approved/duplicate/creator/editor/flagState)
    in: {}
    data: {<default>, data: [bonusInfo]}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

GET /api/sets/:SID/bonuses/:BID
    about: get a specific bonus
    in: {}
    data: {<default>, data: {bonusInfo}}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        
POST /api/sets/:SID/bonuses
    about: create bonuses for a given set
    in: {subject, difficulty, lead, questions : [question...], answers : [answer...]}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - contains fields erroneous to schema

PUT /api/sets/:SID/bonuses/:BID
    about: edit a given bonus
    in: {subject, difficulty, lead, questions : [question...], answers : [answer...], approved, duplicate}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - not creator of question
        - not editor or administrator
        - not ed or admin and approving
        - contains fields erroneous to schema

DELETE /api/sets/:SID/bonuses/:BID
    about: delete a given bonus
    in: {}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - not creator of question
        - not editor or administrator

POST /api/sets/:SID/bonuses/:BID/message
    about: leave a message and notify users with flags
    in: {message}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

DELETE /api/sets/:SID/bonuses/:BID/message/:MID
    about: delete a message
    in: {}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        - [not creator of question]?
        - not editor or administrator

POST /api/sets/:SID/packets
    about: generate packets
    in: {tossups, bonuses, packets, subjects, overwrite, addToExisting}
    data: {<default>}
    error:
        - not authenticated
        - set does not exist
        - not administrator

GET /api/sets/:SID/packets
    about: get generated packets in JSON form
    in: {}
    data: {<default>, data : {packets : [{tossups : [questionID...], bonuses : [questionID...]}...],
        questions : {tossups : [{ID : info}...], bonuses : [{ID : info}...]}}}
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

<expose API hook to get specific packet?>

GET /sets/:SID/packets/:PID || /sets/:SID/packets/:PID/HTML
    about: return HTML page of formatted packet
    in: {}
    data: see about
    error:
        - not authenticated
        - set does not exist
        - no permissions for set
        
GET /sets/:ID/packets/:PID/PDF
    about: return PDF file of formatted packet
    in: {}
    data: see about
    error:
        - not authenticated
        - set does not exist
        - no permissions for set

GET /sets/:ID/packets/:PID/DOC
    about: return DOC file of formatted packet
    in: {}
    data: see about
    error:
        - not authenticated
        - set does not exist
        - no permissions for set